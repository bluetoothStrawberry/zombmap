#!/usr/bin/env python3

from scapy.all import *
from time import sleep
from sys import exit 
from random import randrange


zombie = 'xxx.xxx.xx.xxx'
target = 'xxx.xxx.xx.xxx'

# Get macs 
zombie_mac = getmacbyip(zombie)
target_mac = getmacbyip(target)

# Set up attacker
attacker = get_if_addr(conf.iface)
attacker_mac = get_if_hwaddr(conf.iface)

# First we collect the current ip id from zombie
# We can achieve that by sending a Syn/Ack to our zombie boy
ip_id = 0; padding = b"\x00" * 16
res = srp1(Ether(src=attacker_mac, dst=zombie_mac)/IP(src=attacker, dst=zombie)/TCP(dport=80, flags="SA")/padding, verbose=False)
ip_id = res["IP"].id

if ip_id == 0:
    print(f'Host returned IP Indentification is  all zeros for port {port}')
    print('Aborting')
    exit(1)

# Now we send a syn to the target port 40662  saying that we're zombie:80
# As this port is mostly always closed
# Zombie we'll receive a RST from our target confirming that the port is closed. 
a_close = 40662 # Always clsoed 
sendp(Ether(src=zombie_mac, dst=target_mac)/IP(src=zombie, dst=target)/TCP(sport=80, dport=a_close, flags="S")/padding, verbose=False)


# Now we send another Syn/Ack
# If the port is closed  
# new_ip_id == ip_id + 1
# If the port is open
# new_ip_id == ip_id + 2
# This is because  if the targets port is closed, it will send a rst to the zombie. Which will not change th ip id
# But if the port is open, it will send an syn/ack which  the zombie you reply by sending a RST adding ip_id + 1 
new_ip_id = ip_id
res = srp1(Ether(src=attacker_mac, dst=zombie_mac)/IP(src=attacker, dst=zombie)/TCP(dport=80, flags="SA")/padding, verbose=False)
new_ip_id = res["IP"].id

if new_ip_id - ip_id != 1:
    print(f'Zombie target {zombie} is active, please choose another proxy')
    print('Aborting')
    exit(2)


def zombmap(port):
    padding = b"\x00" * 16
    res = srp1(Ether(src=attacker_mac, dst=zombie_mac)/IP(src=attacker, dst=zombie)/TCP(dport=80, flags="SA")/padding, verbose=False)
    ip_id = res["IP"].id
    sendp(Ether(src=zombie_mac, dst=target_mac)/IP(src=zombie, dst=target)/TCP(sport=80, dport=int(port), flags="S")/padding, verbose=False)
        
    res = srp1(Ether(src=attacker_mac, dst=zombie_mac)/IP(src=attacker, dst=zombie)/TCP(dport=80, flags="SA")/padding, verbose=False)
    new_ip_id = res["IP"].id
    if new_ip_id - ip_id == 2:
        return port
    return None


# open ports.txt file (nmap top 1000)
with open('ports.txt', 'r') as f:
    data = f.read()
ports = data.rstrip().split(',')

# Verify most common ports
# Send requess at random frequency, to mess with IDS
# devide by 
# 10 sneaky
# 100 normal
# 1000 noisy
# 10000 insane
speed = 1000
# by 100 if you dont care
for port in ports:
    port_open = None
    port_open = zombmap(port)
    if port_open:
        print(port)
    wait_time = float(randrange(64)/speed)
    sleep(wait_time)
